#include<stdio.h>
#include<math.h>

int Input(int arr[100]);
void Sort(int arr[100], int n, int (*sort)(int a, int b));
void Print(int arr[100], int n);
void Swap(int* x, int* y);
int Ascending(int a, int b);
int Descending(int a, int b);

void SUSHUSort(int n, int m);

//函数作用：输入原始数组
int Input(int arr[100])
{
	int i = -1;
	do {
		i++;
		scanf_s("%d", &arr[i]);
	} while (arr[i] > 0);
	return i;
}
//函数作用：输出数组
void Print(int arr[100], int n)
{
	int i;
	for (i = 0; i < n; i++)
	{
		printf("%d\t", arr[i]);
	}
	printf("\n");
}
//函数作用：利用选择法对原始数组排序,得到新数组
void Sort1(int arr[100], int n, int (*sort)(int a, int b))
{
	int i, j, k;
	for (i = 0; i < n - 1; i++)
	{
		k = i;
		for (j = i + 1; j < n; j++)
		{
			if ((*sort)(arr[j], arr[k]))
			{
				k = j;
			}
		}
		if (k != i)
		{
			Swap(&arr[i], &arr[k]);
		}
	}
}
//函数作用：利用冒泡法对原始数组排序,得到新数组
void Sort2(int arr[100], int n, int (*sort)(int a, int b))
{
	int i, j, flag=1;
	for (i = 0; i < n - 1; i++)
	{
		for (j = 0; j < n - 1; j++)
		{
			if ((*sort)(arr[j], arr[j+1]))
			{
				Swap(&arr[j], &arr[j+1]);
				flag = 0;
			}
		}
		if (flag == 1)
		{
			break;
		}
	}
}
//函数作用：数值交换
void Swap(int* x, int* y)
{
	int temp = 0;//中间值
	temp = *x;
	*x = *y;
	*y = temp;
}
//函数作用：升序
int Ascending(int a, int b)
{
	return a < b;
}
//函数作用：降序
int Descending(int a, int b)
{
	return a > b;
}
//函数作用：找出指定范围内的素数
void SUSHUSort(int n, int m)
{
	int i, j, count = 0;
	//1.试除法
	for (i = n; i <= m; i++)
	{
		for (j = 2; j < i; j++)
		{
			if (i % j == 0)
			{
				break;
			}
		}
		if (j == i)
		{
			count++;
			printf("%d ", i);
		}
	}
	putchar('\n');
	printf("%d\n", count);
	
	for (i = n; i <= m; i++)
	{
		for (j = 2; j <= sqrt(i); j++)
		{
			if (i % j == 0)
			{
				break;
			}
		}
		if (j > sqrt(i))
		{
			count++;
			printf("%d ", i);
		}
	}
	putchar('\n');
	printf("%d\n", count);
}
